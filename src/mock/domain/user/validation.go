// Code generated by MockGen. DO NOT EDIT.
// Source: internal/domain/user/validation.go

// Package mock_user is a generated GoMock package.
package mock_user

import (
	domain "artics-api/src/internal/domain"
	user "artics-api/src/internal/domain/user"
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUserDomainValidator is a mock of UserDomainValidator interface.
type MockUserDomainValidator struct {
	ctrl     *gomock.Controller
	recorder *MockUserDomainValidatorMockRecorder
}

// MockUserDomainValidatorMockRecorder is the mock recorder for MockUserDomainValidator.
type MockUserDomainValidatorMockRecorder struct {
	mock *MockUserDomainValidator
}

// NewMockUserDomainValidator creates a new mock instance.
func NewMockUserDomainValidator(ctrl *gomock.Controller) *MockUserDomainValidator {
	mock := &MockUserDomainValidator{ctrl: ctrl}
	mock.recorder = &MockUserDomainValidatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserDomainValidator) EXPECT() *MockUserDomainValidatorMockRecorder {
	return m.recorder
}

// Validate mocks base method.
func (m *MockUserDomainValidator) Validate(ctx context.Context, u *user.User) ([]*domain.ValidationError, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Validate", ctx, u)
	ret0, _ := ret[0].([]*domain.ValidationError)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Validate indicates an expected call of Validate.
func (mr *MockUserDomainValidatorMockRecorder) Validate(ctx, u interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Validate", reflect.TypeOf((*MockUserDomainValidator)(nil).Validate), ctx, u)
}

// ValidatePassword mocks base method.
func (m *MockUserDomainValidator) ValidatePassword(ctx context.Context, p, pc string) []*domain.ValidationError {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidatePassword", ctx, p, pc)
	ret0, _ := ret[0].([]*domain.ValidationError)
	return ret0
}

// ValidatePassword indicates an expected call of ValidatePassword.
func (mr *MockUserDomainValidatorMockRecorder) ValidatePassword(ctx, p, pc interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidatePassword", reflect.TypeOf((*MockUserDomainValidator)(nil).ValidatePassword), ctx, p, pc)
}
