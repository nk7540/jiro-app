// Code generated by MockGen. DO NOT EDIT.
// Source: internal/domain/favorite/repository.go

// Package mock_favorite is a generated GoMock package.
package mock_favorite

import (
	favorite "artics-api/src/internal/domain/favorite"
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockFavoriteRepository is a mock of FavoriteRepository interface.
type MockFavoriteRepository struct {
	ctrl     *gomock.Controller
	recorder *MockFavoriteRepositoryMockRecorder
}

// MockFavoriteRepositoryMockRecorder is the mock recorder for MockFavoriteRepository.
type MockFavoriteRepositoryMockRecorder struct {
	mock *MockFavoriteRepository
}

// NewMockFavoriteRepository creates a new mock instance.
func NewMockFavoriteRepository(ctrl *gomock.Controller) *MockFavoriteRepository {
	mock := &MockFavoriteRepository{ctrl: ctrl}
	mock.recorder = &MockFavoriteRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFavoriteRepository) EXPECT() *MockFavoriteRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockFavoriteRepository) Create(ctx context.Context, f *favorite.Favorite) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, f)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockFavoriteRepositoryMockRecorder) Create(ctx, f interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockFavoriteRepository)(nil).Create), ctx, f)
}

// Delete mocks base method.
func (m *MockFavoriteRepository) Delete(ctx context.Context, f *favorite.Favorite) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", ctx, f)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockFavoriteRepositoryMockRecorder) Delete(ctx, f interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockFavoriteRepository)(nil).Delete), ctx, f)
}
