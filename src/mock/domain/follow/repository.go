// Code generated by MockGen. DO NOT EDIT.
// Source: internal/domain/follow/repository.go

// Package mock_follow is a generated GoMock package.
package mock_follow

import (
	follow "artics-api/src/internal/domain/follow"
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockFollowRepository is a mock of FollowRepository interface.
type MockFollowRepository struct {
	ctrl     *gomock.Controller
	recorder *MockFollowRepositoryMockRecorder
}

// MockFollowRepositoryMockRecorder is the mock recorder for MockFollowRepository.
type MockFollowRepositoryMockRecorder struct {
	mock *MockFollowRepository
}

// NewMockFollowRepository creates a new mock instance.
func NewMockFollowRepository(ctrl *gomock.Controller) *MockFollowRepository {
	mock := &MockFollowRepository{ctrl: ctrl}
	mock.recorder = &MockFollowRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFollowRepository) EXPECT() *MockFollowRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockFollowRepository) Create(ctx context.Context, follow *follow.Follow) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, follow)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockFollowRepositoryMockRecorder) Create(ctx, follow interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockFollowRepository)(nil).Create), ctx, follow)
}

// Delete mocks base method.
func (m *MockFollowRepository) Delete(ctx context.Context, follow *follow.Follow) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", ctx, follow)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockFollowRepositoryMockRecorder) Delete(ctx, follow interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockFollowRepository)(nil).Delete), ctx, follow)
}
