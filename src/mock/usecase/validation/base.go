// Code generated by MockGen. DO NOT EDIT.
// Source: internal/usecase/validation/base.go

// Package mock_validation is a generated GoMock package.
package mock_validation

import (
	domain "artics-api/src/internal/domain"
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRequestValidator is a mock of RequestValidator interface.
type MockRequestValidator struct {
	ctrl     *gomock.Controller
	recorder *MockRequestValidatorMockRecorder
}

// MockRequestValidatorMockRecorder is the mock recorder for MockRequestValidator.
type MockRequestValidatorMockRecorder struct {
	mock *MockRequestValidator
}

// NewMockRequestValidator creates a new mock instance.
func NewMockRequestValidator(ctrl *gomock.Controller) *MockRequestValidator {
	mock := &MockRequestValidator{ctrl: ctrl}
	mock.recorder = &MockRequestValidatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRequestValidator) EXPECT() *MockRequestValidatorMockRecorder {
	return m.recorder
}

// Run mocks base method.
func (m *MockRequestValidator) Run(ctx context.Context, i interface{}) []*domain.ValidationError {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Run", ctx, i)
	ret0, _ := ret[0].([]*domain.ValidationError)
	return ret0
}

// Run indicates an expected call of Run.
func (mr *MockRequestValidatorMockRecorder) Run(ctx, i interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Run", reflect.TypeOf((*MockRequestValidator)(nil).Run), ctx, i)
}
